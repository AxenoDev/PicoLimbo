name: Build Linux

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      binary:
        required: true
        type: string


jobs:
  linux-gnu:
    name: linux-gnu
    env:
      platform: linux-gnu-x86_64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu --bin pico_limbo --package pico_limbo

      - name: Set file name
        id: set_file_name
        run: |
          echo "file_name=${{ inputs.binary }}_${{ inputs.tag }}_${{ env.platform }}" >> "$GITHUB_OUTPUT"

      - name: Prepare package
        run: |
          mkdir linux-gnu
          cp target/x86_64-unknown-linux-gnu/release/${{ inputs.binary }} linux-gnu/
          cp -r data/generated linux-gnu/assets

      - name: Package as a zip
        working-directory: ./linux-gnu
        run: |
          zip -r ../${{ steps.set_file_name.outputs.file_name }}.zip .

      - name: Upload binaries to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.platform }}
          path: ${{ steps.set_file_name.outputs.file_name }}.zip
          retention-days: 1

  linux-musl:
    name: linux-musl
    env:
      platform: linux-musl-x86_64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install musl toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Add Rust musl target
        run: rustup target add x86_64-unknown-linux-musl

      - name: Build
        run: |
          cargo build --release --target x86_64-unknown-linux-musl --bin pico_limbo --package pico_limbo

      - name: Set file name
        id: set_file_name
        run: |
          echo "file_name=${{ inputs.binary }}_${{ inputs.tag }}_${{ env.platform }}" >> "$GITHUB_OUTPUT"

      - name: Prepare package
        run: |
          mkdir linux-musl
          cp target/x86_64-unknown-linux-musl/release/${{ inputs.binary }} linux-musl/
          cp -r data/generated linux-musl/assets

      - name: Package as a zip
        working-directory: ./linux-musl
        run: |
          zip -r ../${{ steps.set_file_name.outputs.file_name }}.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.platform }}
          path: ${{ steps.set_file_name.outputs.file_name }}.zip
          retention-days: 1
